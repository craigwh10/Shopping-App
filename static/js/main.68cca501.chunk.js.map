{"version":3,"sources":["components/Shoes/ShoePage/Button.js","components/Shoes/Shoe/SizeList.js","components/Shoes/Shoe/Shoe.js","components/Shoes/Shoes.js","components/DivElements/NavLinks.js","components/DivElements/SearchBar.js","components/DivElements/Header.js","components/Shoes/ShoePage/PageGenerator.js","components/containers/App.js","serviceWorker.js","index.js"],"names":["button","props","className","onClick","click","children","items","classHandler","e","classes","push","sizes","map","item","index","key","uuidv4","join","Shoe","this","name","purpose","SizeList","Button","pageHandler","Component","Shoes","shoes","shoe","id","navLinks","href","handleClick","unique","charAt","toUpperCase","slice","searchBar","type","placeholder","aria-label","aria-describedby","onChange","changed","Header","state","searchState","length","value","clickInternalHandler","changeHandler","event","setState","target","link","SearchBar","search","searchChange","resetState","PureComponent","generatePage","shoeData","App","baseState","uniqueHeader","allPurposes","a","Set","clickFilter","filteredShoes","filter","filteredLength","filtered","filteredValue","page","pageShoe","searchHandler","lc","toLowerCase","includes","console","table","searchValue","bind","Fragment","appHeader","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68cca501.chunk.js","sourcesContent":["import React from \"react\";\n\nconst button = props => {\n  return (\n    <button\n      className=\"btn btn-success btn-block\"\n      onClick={() => props.click()}\n      // on Click, run the click in the props, and send the shoeData in the same props to the button\n      // component, this way you can get the component to generate a button, and run the data thats sent\n      // to it's props.\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default button;\n","import React from \"react\";\nimport uuidv4 from \"uuid/v4\";\n\nconst items = props => {\n  const classHandler = e => {\n    const classes = [\"list-group-item\"];\n\n    if (e <= 3) {\n      classes.push(\"list-group-item-danger\");\n      return [e, classes];\n    } else {\n      classes.push(\"list-group-item-success\");\n      return [e, classes];\n    }\n  };\n  return props.sizes.map((item, index) => (\n    <ul key={uuidv4()} className=\"list-group list-group-horizontal\">\n      <li className=\"list-group-item\" key={uuidv4()}>\n        {item[0]}\n      </li>\n      <li className={classHandler(item[1])[1].join(\" \")} key={uuidv4()}>\n        {classHandler(item[1])[0]}\n      </li>\n    </ul>\n  ));\n};\n\nexport default items;\n","import React, { Component } from \"react\";\nimport Button from \"../ShoePage/Button\";\nimport SizeList from \"./SizeList\";\nimport \"./Shoe.css\";\n\nclass Shoe extends Component {\n  render() {\n    return (\n      <div className=\"col-lg-3 shoeModule\">\n        <h1>{this.props.name}</h1>\n        <p>{this.props.purpose}</p>\n        <SizeList sizes={this.props.sizes} />\n        <Button click={() => this.props.pageHandler()}>See more</Button>\n      </div>\n    );\n  }\n}\n\nexport default Shoe;\n","import React, { Component } from \"react\";\nimport Shoe from \"../Shoes/Shoe/Shoe\";\n\nclass Shoes extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          {this.props.shoes.map((shoe, index) => {\n            return (\n              <Shoe\n                key={shoe.id}\n                name={shoe.name}\n                sizes={shoe.sizes}\n                purpose={shoe.purpose}\n                shoe={shoe}\n                pageHandler={() => this.props.pageHandler(shoe)}\n                // Sending shoe to pageHandler in App to be sent to PageGenerator\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shoes;\n","import React from \"react\";\nimport uuidv4 from \"uuid/v4\";\n\nconst navLinks = props => {\n  return (\n    <li className=\"nav-item\" key={uuidv4()}>\n      <a\n        href={null}\n        className=\"nav-link\"\n        onClick={() => {\n          props.handleClick(props.unique);\n        }}\n      >\n        {props.unique.charAt(0).toUpperCase() + props.unique.slice(1)\n        //Capitalised first letter of string\n        }\n      </a>\n    </li>\n  );\n};\n\nexport default navLinks;\n","import React from \"react\";\n\n// Point of this functional component is to take in the state from app as a props\n// and to update the filteredState as keys are inputted.\n\n// Possible complications is needing to:\n// - empty the search bar if clicked on a feature\n\nconst searchBar = props => {\n  return (\n    <div className=\"input-group\">\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        className=\"form-control\"\n        aria-label=\"SearchBar\"\n        aria-describedby=\"basic-addon1\"\n        onChange={props.changed}\n      />\n    </div>\n  );\n};\n\nexport default searchBar;\n","import React, { PureComponent } from \"react\";\nimport \"./Header.css\";\nimport NavLink from \"../DivElements/NavLinks\";\nimport SearchBar from \"../DivElements/SearchBar\";\nimport uuidv4 from \"uuid/v4\";\n\nclass Header extends PureComponent {\n  state = {\n    searchState: \"\",\n    length: 0\n  };\n\n  handleClick = value => {\n    this.props.click(value);\n  };\n\n  clickInternalHandler = props => {\n    const uniqueFilterLinks = this.props.unique();\n    return uniqueFilterLinks;\n  };\n\n  changeHandler = event => {\n    this.setState({\n      searchState: event.target.value,\n      length: event.target.value.length\n    });\n  };\n\n  componentDidMount() {\n    this.clickInternalHandler();\n  }\n\n  render() {\n    const items = this.clickInternalHandler().map(link => (\n      <NavLink unique={link} key={uuidv4()} handleClick={this.handleClick} />\n    ));\n\n    return (\n      <div className=\"card-header\">\n        <ul className=\"nav nav-tabs card-header-tabs\">\n          <li className=\"nav-item\">\n            <SearchBar\n              searchState={this.state.searchState}\n              length={this.state.length}\n              changed={event => this.changeHandler(event)}\n              search={this.props.searchChange(this.state.searchState)}\n            />\n          </li>\n          <li className=\"nav-item\">\n            <a href={null} className=\"nav-link\" onClick={this.props.resetState}>\n              Show All\n            </a>\n          </li>\n          {items}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport SizeList from \"../Shoe/SizeList\";\nimport \"./PageGenerator.css\";\n\nconst generatePage = props => {\n  return (\n    <div className=\"shoePage\">\n      <h1>{props.shoeData.name}</h1>\n      <h2>\n        {props.shoeData.purpose.charAt(0).toUpperCase() +\n          props.shoeData.purpose.slice(1)}\n      </h2>\n      <SizeList sizes={props.shoeData.sizes} />\n    </div>\n  );\n};\n\nexport default generatePage;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Shoes from \"../Shoes/Shoes\";\nimport Header from \"../DivElements/Header\";\nimport PageGenerator from \"../Shoes/ShoePage/PageGenerator\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shoes: [\n        {\n          id: \"a1\",\n          name: \"Nike react\",\n          sizes: [[1, 2], [2, 1], [3, 2], [4, 1], [5, 6]],\n          purpose: \"running\"\n        },\n        {\n          id: \"a2\",\n          name: \"Nike vaporfly\",\n          sizes: [[1, 1], [2, 3], [3, 2], [4, 2], [5, 2], [6, 20]],\n          purpose: \"sports\"\n        },\n        {\n          id: \"a3\",\n          name: \"Adidas ultraboost\",\n          sizes: [[1, 1], [2, 2], [3, 2]],\n          purpose: \"sports\"\n        },\n        {\n          id: \"a4\",\n          name: \"Adidas run\",\n          sizes: [[1, 18], [2, 42], [3, 8]],\n          purpose: \"running\"\n        },\n        {\n          id: \"a5\",\n          name: \"Nike free RN\",\n          sizes: [[1, 1], [2, 42], [3, 8]],\n          purpose: \"running\"\n        },\n        {\n          id: \"a6\",\n          name: \"Brogues\",\n          sizes: [[1, 1], [2, 42], [3, 8]],\n          purpose: \"smartwear\"\n        },\n        {\n          id: \"a7\",\n          name: \"Sliders\",\n          sizes: [[1, 1], [2, 10], [3, 8]],\n          purpose: \"smartwear\"\n        }\n      ],\n      filteredShoes: [],\n      filteredLength: 7,\n      filtered: false,\n      filteredValue: null,\n      page: false,\n      searchValue: null\n    };\n    this.clickFilter = this.clickFilter.bind(this);\n    this.baseState = this.state;\n    this.resetState = this.resetState.bind(this);\n    this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  resetState = () => {\n    this.setState(this.baseState);\n  };\n\n  uniqueHeader = () => {\n    const allPurposes = this.state.shoes.map(a => a.purpose);\n    let uniquePurposes = [...new Set(allPurposes)];\n    // Gets all unique purposes to be sent to header.\n    return uniquePurposes;\n  };\n\n  clickFilter = value => {\n    this.setState({\n      filteredShoes: this.state.shoes.filter(item => item.purpose === value),\n      filteredLength: this.state.filteredShoes.length,\n      filtered: true,\n      filteredValue: value,\n      page: false,\n      pageShoe: []\n    });\n  };\n\n  pageHandler = shoe => {\n    this.setState({\n      page: true,\n      pageShoe: shoe\n    });\n  };\n\n  searchHandler = value => {\n    const lc = value.toLowerCase();\n    const filteredShoes = this.state.shoes.filter(item =>\n      item.name.toLowerCase().includes(lc)\n    );\n    const filteredLength = filteredShoes.length;\n    console.table(filteredShoes);\n    this.setState({\n      searchValue: value,\n      filtered: filteredLength < 7 ? true : false,\n      filteredShoes: filteredShoes,\n      filteredLength: filteredLength,\n      page: false\n    });\n  };\n\n  render() {\n    const shoes = (\n      <div className=\"card-body\">\n        <Shoes\n          shoes={\n            this.state.filtered ? this.state.filteredShoes : this.state.shoes\n          }\n          pageHandler={shoe => this.pageHandler(shoe)}\n        />\n      </div>\n    );\n\n    return (\n      <React.Fragment>\n        <h1 className=\"top-title\">{this.props.appHeader}</h1>\n        <div className=\"card text-center\">\n          <Header\n            click={this.clickFilter}\n            resetState={this.resetState}\n            unique={this.uniqueHeader}\n            searchChange={this.searchHandler}\n          />\n          {this.state.page ? (\n            <PageGenerator shoeData={this.state.pageShoe} />\n          ) : (\n            shoes\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <App appHeader=\"Shoe Application\" />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}